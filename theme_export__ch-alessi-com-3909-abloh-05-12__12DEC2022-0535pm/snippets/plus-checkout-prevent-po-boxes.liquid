<!-- Added by Plus - October 13th 2020 -->
<style>
  .plus-field-error input {
    border-color: {{ settings.checkout_error_color }} !important;
    -webkit-box-shadow: 0 0 0 1px {{ settings.checkout_error_color }};
    box-shadow: 0 0 0 1px {{ settings.checkout_error_color }};
  }
  
  .plus-field-error__message {
    font-size: 13.33333px;
    line-height: 1.3em;
    margin: 0.57143em 0 0.28571em;
    color: {{ settings.checkout_error_color }};
  }
</style>

<script>
  (function($) {
    window.Plus = window.Plus || {};
    window.Plus.checkout = window.Plus.checkout || {};
    
    Plus.checkout.poBoxSettings = {
      addressSelectors: '[data-step] [name="checkout[shipping_address][address1]"]input:visible, [data-step] [name="checkout[shipping_address][address2]"]input:visible',
      formSelector: '[data-step] form',
      formSubmitSelector: '[type="submit"]',
      regex: /(?:P(?:ost(?:al)?)?[\.\-\s]*(?:(?:O(?:ffice)?[\.\-\s]*)?B(?:ox|in|\b|\d)|o(?:ffice|\b)(?:[-\s]*\d)|code)|box[-\s\b]*\d)/i,
      fieldParentSelector: '[data-address-field]',
      fieldErrorClass: 'plus-field-error',
      fieldErrorMessageClass: 'plus-field-error__message',
      fieldErrorSelector: '.plus-field-error__message',
      errorText: '{{ 'plus.checkout.po_box_error' | t }}'
    };
    
    if (Shopify.Checkout.step === 'contact_information') {
      $(document).on('page:load page:change', function() {
        Plus.checkout.poBoxInit(Plus.checkout.poBoxSettings)
      });
      
      Plus.checkout.poBoxInit = function(settings) {
        var addressesSelector = settings.address1Selector + ', ' + settings.address2Selector,
            formSubmitSelector = settings.formSelector + ' ' + settings.formSubmitSelector,
            $inputs = $(settings.addressSelectors);
      
        // Check for P.O. Box on form submit
        $(formSubmitSelector).on('click', function(e) {
          e.preventDefault();
          var hasMatch = false;
          
          $inputs.each(function() {
            if (Plus.checkout.poBoxRegex($(this), settings)) {
              hasMatch = true;
            }
          });
          
          if (!hasMatch) {
            $(this).closest(settings.formSelector).submit();
          }
        });
      
        // Check for P.O. Box on blur
        $inputs.blur(function() {
          Plus.checkout.poBoxRegex($(this), settings);
        });
        
        // Intercept 'enter' for form submission
        $(settings.formSelector).on('keypress', function(e) {
          if (e.keyCode === 13) {
            e.preventDefault();
            $(this).find(settings.formSubmitSelector).trigger('click');
          }
        });
      }
      
      Plus.checkout.poBoxRegex = function(elem, settings) {
        var hasMatch = false,
            $current = $(elem),
            $parent = $current.closest(settings.fieldParentSelector);
            
        if (settings.regex.test($current.val())) {
          hasMatch = true;
    
          if (!($parent.hasClass(settings.fieldErrorClass))) {
            $parent.addClass(settings.fieldErrorClass);
          }
          
          if ($parent.find(settings.fieldErrorSelector).length < 1) {
            $parent.append('<p class="' + settings.fieldErrorMessageClass + '">' + settings.errorText +'</p>');
          }
        } else {
          if ($parent.hasClass(settings.fieldErrorClass)) {
            $parent.removeClass(settings.fieldErrorClass);
          }
          
          if ($parent.find(settings.fieldErrorSelector).length > 0) {
            $parent.find(settings.fieldErrorSelector).remove();
          }
        }
        
        return hasMatch;
      }
    }
  })(Checkout.$);
</script>