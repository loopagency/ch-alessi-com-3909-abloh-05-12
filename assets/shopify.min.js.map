{"version":3,"sources":["webpack:///../node_modules/@shopify/theme-currency/dist/currency.cjs.js","webpack:///../node_modules/@shopify/theme-a11y/theme-a11y.js","webpack:///../node_modules/@shopify/theme-cart/request.js","webpack:///../node_modules/@shopify/theme-cart/validate.js","webpack:///../node_modules/@shopify/theme-cart/theme-cart.js","webpack:///../node_modules/@shopify/theme-sections/section.js","webpack:///../node_modules/@shopify/theme-sections/theme-sections.js","webpack:///../node_modules/@shopify/theme-images/dist/images.cjs.js"],"names":["Object","defineProperty","exports","value","formatMoney","cents","format","replace","placeholderRegex","formatString","moneyFormat","formatWithDelimiters","number","precision","arguments","length","thousands","decimal","isNaN","parts","toFixed","split","dollarsAmount","centsAmount","match","forceFocus","element","options","savedTabIndex","tabIndex","dataset","focus","className","classList","add","addEventListener","callback","event","target","removeEventListener","type","remove","focusHash","hash","window","location","document","getElementById","slice","ignore","matches","bindInPageLinks","Array","prototype","call","querySelectorAll","filter","link","querySelector","focusable","container","offsetWidth","offsetHeight","getClientRects","__webpack_require__","d","__webpack_exports__","trapFocus","removeTrapFocus","trapFocusHandlers","elements","elementToFocus","first","last","focusin","contains","keydown","focusout","keyCode","shiftKey","preventDefault","getDefaultRequestConfig","JSON","parse","stringify","credentials","headers","X-Requested-With","Content-Type","fetchJSON","url","config","fetch","then","response","ok","json","cart","cartChange","line","method","body","quantity","properties","cartUpdate","validate_key","key","TypeError","getState","getItemIndex","state","index","items","forEach","item","i","Promise","reject","Error","addItem","id","updateItem","validate_options","removeItem","clearItems","getNote","note","updateNote","clearNote","SECTION_ID_ATTR","Section","this","Element","getAttribute","extensions","assign","onLoad","Function","onUnload","onSelect","onDeselect","onBlockSelect","onBlockDeselect","extend","extension","push","extensionClone","init","apply","to","nextSource","nextKey","hasOwnProperty","writable","configurable","SECTION_TYPE_ATTR","Shopify","theme","sections","registered","instances","register","TypedSection","constructor","create","load","types","containers","normalizeType","normalizeContainers","selector","getInstances","filteredInstances","NodeList","isPrototypeOf","isArray","firstElement","concat","instance","getInstanceById","keys","map","toLowerCase","designMode","detail","sectionId","e","indexOf","splice","loadImage","path","Image","src","getSizedImageUrl","size","removeProtocol","prefix","suffix","preload","images","imageSize"],"mappings":"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","file":"shopify.min.js","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.formatMoney = formatMoney;\n/**\n * Currency Helpers\n * -----------------------------------------------------------------------------\n * A collection of useful functions that help with currency formatting\n *\n * Current contents\n * - formatMoney - Takes an amount in cents and returns it as a formatted dollar value.\n *\n */\n\nvar moneyFormat = '${{amount}}';\n\n/**\n * Format money values based on your shop currency settings\n * @param  {Number|string} cents - value in cents or dollar amount e.g. 300 cents\n * or 3.00 dollars\n * @param  {String} format - shop money_format setting\n * @return {String} value - formatted value\n */\nfunction formatMoney(cents, format) {\n  if (typeof cents === 'string') {\n    cents = cents.replace('.', '');\n  }\n  var value = '';\n  var placeholderRegex = /\\{\\{\\s*(\\w+)\\s*\\}\\}/;\n  var formatString = format || moneyFormat;\n\n  function formatWithDelimiters(number) {\n    var precision = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 2;\n    var thousands = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : ',';\n    var decimal = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : '.';\n\n    if (isNaN(number) || number == null) {\n      return 0;\n    }\n\n    number = (number / 100.0).toFixed(precision);\n\n    var parts = number.split('.');\n    var dollarsAmount = parts[0].replace(/(\\d)(?=(\\d\\d\\d)+(?!\\d))/g, '$1' + thousands);\n    var centsAmount = parts[1] ? decimal + parts[1] : '';\n\n    return dollarsAmount + centsAmount;\n  }\n\n  switch (formatString.match(placeholderRegex)[1]) {\n    case 'amount':\n      value = formatWithDelimiters(cents, 2);\n      break;\n    case 'amount_no_decimals':\n      value = formatWithDelimiters(cents, 0);\n      break;\n    case 'amount_with_comma_separator':\n      value = formatWithDelimiters(cents, 2, '.', ',');\n      break;\n    case 'amount_no_decimals_with_comma_separator':\n      value = formatWithDelimiters(cents, 0, '.', ',');\n      break;\n  }\n\n  return formatString.replace(placeholderRegex, value);\n}\n","/**\n * A11y Helpers\n * -----------------------------------------------------------------------------\n * A collection of useful functions that help make your theme more accessible\n */\n\n/**\n * Moves focus to an HTML element\n * eg for In-page links, after scroll, focus shifts to content area so that\n * next `tab` is where user expects. Used in bindInPageLinks()\n * eg move focus to a modal that is opened. Used in trapFocus()\n *\n * @param {Element} container - Container DOM element to trap focus inside of\n * @param {Object} options - Settings unique to your theme\n * @param {string} options.className - Class name to apply to element on focus.\n */\nexport function forceFocus(element, options) {\n  options = options || {};\n\n  var savedTabIndex = element.tabIndex;\n\n  element.tabIndex = -1;\n  element.dataset.tabIndex = savedTabIndex;\n  element.focus();\n  if (typeof options.className !== 'undefined') {\n    element.classList.add(options.className);\n  }\n  element.addEventListener('blur', callback);\n\n  function callback(event) {\n    event.target.removeEventListener(event.type, callback);\n\n    element.tabIndex = savedTabIndex;\n    delete element.dataset.tabIndex;\n    if (typeof options.className !== 'undefined') {\n      element.classList.remove(options.className);\n    }\n  }\n}\n\n/**\n * If there's a hash in the url, focus the appropriate element\n * This compensates for older browsers that do not move keyboard focus to anchor links.\n * Recommendation: To be called once the page in loaded.\n *\n * @param {Object} options - Settings unique to your theme\n * @param {string} options.className - Class name to apply to element on focus.\n * @param {string} options.ignore - Selector for elements to not include.\n */\n\nexport function focusHash(options) {\n  options = options || {};\n  var hash = window.location.hash;\n  var element = document.getElementById(hash.slice(1));\n\n  // if we are to ignore this element, early return\n  if (element && options.ignore && element.matches(options.ignore)) {\n    return false;\n  }\n\n  if (hash && element) {\n    forceFocus(element, options);\n  }\n}\n\n/**\n * When an in-page (url w/hash) link is clicked, focus the appropriate element\n * This compensates for older browsers that do not move keyboard focus to anchor links.\n * Recommendation: To be called once the page in loaded.\n *\n * @param {Object} options - Settings unique to your theme\n * @param {string} options.className - Class name to apply to element on focus.\n * @param {string} options.ignore - CSS selector for elements to not include.\n */\n\nexport function bindInPageLinks(options) {\n  options = options || {};\n  var links = Array.prototype.slice.call(\n    document.querySelectorAll('a[href^=\"#\"]')\n  );\n\n  return links.filter(function(link) {\n    if (link.hash === '#' || link.hash === '') {\n      return false;\n    }\n\n    if (options.ignore && link.matches(options.ignore)) {\n      return false;\n    }\n\n    var element = document.querySelector(link.hash);\n\n    if (!element) {\n      return false;\n    }\n\n    link.addEventListener('click', function() {\n      forceFocus(element, options);\n    });\n\n    return true;\n  });\n}\n\nexport function focusable(container) {\n  var elements = Array.prototype.slice.call(\n    container.querySelectorAll(\n      '[tabindex],' +\n        '[draggable],' +\n        'a[href],' +\n        'area,' +\n        'button:enabled,' +\n        'input:not([type=hidden]):enabled,' +\n        'object,' +\n        'select:enabled,' +\n        'textarea:enabled'\n    )\n  );\n\n  // Filter out elements that are not visible.\n  // Copied from jQuery https://github.com/jquery/jquery/blob/2d4f53416e5f74fa98e0c1d66b6f3c285a12f0ce/src/css/hiddenVisibleSelectors.js\n  return elements.filter(function(element) {\n    return !!(\n      element.offsetWidth ||\n      element.offsetHeight ||\n      element.getClientRects().length\n    );\n  });\n}\n\n/**\n * Traps the focus in a particular container\n *\n * @param {Element} container - Container DOM element to trap focus inside of\n * @param {Element} elementToFocus - Element to be focused on first\n * @param {Object} options - Settings unique to your theme\n * @param {string} options.className - Class name to apply to element on focus.\n */\n\nvar trapFocusHandlers = {};\n\nexport function trapFocus(container, options) {\n  options = options || {};\n  var elements = focusable(container);\n  var elementToFocus = options.elementToFocus || container;\n  var first = elements[0];\n  var last = elements[elements.length - 1];\n\n  removeTrapFocus();\n\n  trapFocusHandlers.focusin = function(event) {\n    if (container !== event.target && !container.contains(event.target)) {\n      first.focus();\n    }\n\n    if (\n      event.target !== container &&\n      event.target !== last &&\n      event.target !== first\n    )\n      return;\n    document.addEventListener('keydown', trapFocusHandlers.keydown);\n  };\n\n  trapFocusHandlers.focusout = function() {\n    document.removeEventListener('keydown', trapFocusHandlers.keydown);\n  };\n\n  trapFocusHandlers.keydown = function(event) {\n    if (event.keyCode !== 9) return; // If not TAB key\n\n    // On the last focusable element and tab forward, focus the first element.\n    if (event.target === last && !event.shiftKey) {\n      event.preventDefault();\n      first.focus();\n    }\n\n    //  On the first focusable element and tab backward, focus the last element.\n    if (\n      (event.target === container || event.target === first) &&\n      event.shiftKey\n    ) {\n      event.preventDefault();\n      last.focus();\n    }\n  };\n\n  document.addEventListener('focusout', trapFocusHandlers.focusout);\n  document.addEventListener('focusin', trapFocusHandlers.focusin);\n\n  forceFocus(elementToFocus, options);\n}\n\n/**\n * Removes the trap of focus from the page\n */\nexport function removeTrapFocus() {\n  document.removeEventListener('focusin', trapFocusHandlers.focusin);\n  document.removeEventListener('focusout', trapFocusHandlers.focusout);\n  document.removeEventListener('keydown', trapFocusHandlers.keydown);\n}\n\n/**\n * Add a preventive message to external links and links that open to a new window.\n * @param {string} elements - Specific elements to be targeted\n * @param {object} options.messages - Custom messages to overwrite with keys: newWindow, external, newWindowExternal\n * @param {string} options.messages.newWindow - When the link opens in a new window (e.g. target=\"_blank\")\n * @param {string} options.messages.external - When the link is to a different host domain.\n * @param {string} options.messages.newWindowExternal - When the link is to a different host domain and opens in a new window.\n * @param {object} options.prefix - Prefix to namespace \"id\" of the messages\n */\nexport function accessibleLinks(elements, options) {\n  if (typeof elements !== 'string') {\n    throw new TypeError(elements + ' is not a String.');\n  }\n\n  elements = document.querySelectorAll(elements);\n\n  if (elements.length === 0) {\n    return;\n  }\n\n  options = options || {};\n  options.messages = options.messages || {};\n\n  var messages = {\n    newWindow: options.messages.newWindow || 'Opens in a new window.',\n    external: options.messages.external || 'Opens external website.',\n    newWindowExternal:\n      options.messages.newWindowExternal ||\n      'Opens external website in a new window.'\n  };\n\n  var prefix = options.prefix || 'a11y';\n\n  var messageSelectors = {\n    newWindow: prefix + '-new-window-message',\n    external: prefix + '-external-message',\n    newWindowExternal: prefix + '-new-window-external-message'\n  };\n\n  function generateHTML(messages) {\n    var container = document.createElement('ul');\n    var htmlMessages = Object.keys(messages).reduce(function(html, key) {\n      return (html +=\n        '<li id=' + messageSelectors[key] + '>' + messages[key] + '</li>');\n    }, '');\n\n    container.setAttribute('hidden', true);\n    container.innerHTML = htmlMessages;\n\n    document.body.appendChild(container);\n  }\n\n  function externalSite(link) {\n    return link.hostname !== window.location.hostname;\n  }\n\n  elements.forEach(function(link) {\n    var target = link.getAttribute('target');\n    var rel = link.getAttribute('rel');\n    var isExternal = externalSite(link);\n    var isTargetBlank = target === '_blank';\n    var isRelNoopenerEmpty = rel === null || rel.indexOf('noopener') === -1;\n\n    if (isTargetBlank && isRelNoopenerEmpty) {\n      link.setAttribute('rel', 'noopener');\n    }\n\n    if (isExternal && isTargetBlank) {\n      link.setAttribute('aria-describedby', messageSelectors.newWindowExternal);\n    } else if (isExternal) {\n      link.setAttribute('aria-describedby', messageSelectors.external);\n    } else if (isTargetBlank) {\n      link.setAttribute('aria-describedby', messageSelectors.newWindow);\n    }\n  });\n\n  generateHTML(messages);\n}","function getDefaultRequestConfig() {\n  return JSON.parse(\n    JSON.stringify({\n      credentials: 'same-origin',\n      headers: {\n        'X-Requested-With': 'XMLHttpRequest',\n        'Content-Type': 'application/json;'\n      }\n    })\n  );\n}\n\nfunction fetchJSON(url, config) {\n  return fetch(url, config).then(function(response) {\n    if (!response.ok) {\n      throw response;\n    }\n    return response.json();\n  });\n}\n\nexport function cart() {\n  return fetchJSON('/cart.js', getDefaultRequestConfig());\n}\n\nexport function cartAdd(id, quantity, properties) {\n  var config = getDefaultRequestConfig();\n\n  config.method = 'POST';\n  config.body = JSON.stringify({\n    id: id,\n    quantity: quantity,\n    properties: properties\n  });\n\n  return fetchJSON('/cart/add.js', config);\n}\n\nexport function cartChange(line, options) {\n  var config = getDefaultRequestConfig();\n\n  options = options || {};\n\n  config.method = 'POST';\n  config.body = JSON.stringify({\n    line: line,\n    quantity: options.quantity,\n    properties: options.properties\n  });\n\n  return fetchJSON('/cart/change.js', config);\n}\n\nexport function cartClear() {\n  var config = getDefaultRequestConfig();\n  config.method = 'POST';\n\n  return fetchJSON('/cart/clear.js', config);\n}\n\nexport function cartUpdate(body) {\n  var config = getDefaultRequestConfig();\n\n  config.method = 'POST';\n  config.body = JSON.stringify(body);\n\n  return fetchJSON('/cart/update.js', config);\n}\n\nexport function cartShippingRates() {\n  return fetchJSON('/cart/shipping_rates.json', getDefaultRequestConfig());\n}\n","export function key(key) {\n  if (typeof key !== 'string' || key.split(':').length !== 2) {\n    throw new TypeError(\n      'Theme Cart: Provided key value is not a string with the format xxx:xxx'\n    );\n  }\n}\n\nexport function quantity(quantity) {\n  if (typeof quantity !== 'number') {\n    throw new TypeError(\n      'Theme Cart: An object which specifies a quantity or properties value is required'\n    );\n  }\n}\n\nexport function id(id) {\n  if (typeof id !== 'number') {\n    throw new TypeError('Theme Cart: Variant ID must be a number');\n  }\n}\n\nexport function properties(properties) {\n  if (typeof properties !== 'object') {\n    throw new TypeError('Theme Cart: Properties must be an object');\n  }\n}\n\nexport function options(options) {\n  if (typeof options !== 'object') {\n    throw new TypeError('Theme Cart: Options must be an object');\n  }\n\n  if (\n    typeof options.quantity === 'undefined' &&\n    typeof options.properties === 'undefined'\n  ) {\n    throw new Error(\n      'Theme Cart: You muse define a value for quantity or properties'\n    );\n  }\n\n  if (typeof options.quantity !== 'undefined') {\n    quantity(options.quantity);\n  }\n\n  if (typeof options.properties !== 'undefined') {\n    properties(options.properties);\n  }\n}\n","/**\n * Cart Template Script\n * ------------------------------------------------------------------------------\n * A file that contains scripts highly couple code to the Cart template.\n *\n * @namespace cart\n */\n\nimport * as request from './request';\nimport * as validate from './validate';\n\n/**\n * Returns the state object of the cart\n * @returns {Promise} Resolves with the state object of the cart (https://help.shopify.com/en/themes/development/getting-started/using-ajax-api#get-cart)\n */\nexport function getState() {\n  return request.cart();\n}\n\n/**\n * Returns the index of the cart line item\n * @param {string} key The unique key of the line item\n * @returns {Promise} Resolves with the index number of the line item\n */\nexport function getItemIndex(key) {\n  validate.key(key);\n\n  return request.cart().then(function(state) {\n    var index = -1;\n\n    state.items.forEach(function(item, i) {\n      index = item.key === key ? i + 1 : index;\n    });\n\n    if (index === -1) {\n      return Promise.reject(\n        new Error('Theme Cart: Unable to match line item with provided key')\n      );\n    }\n\n    return index;\n  });\n}\n\n/**\n * Fetches the line item object\n * @param {string} key The unique key of the line item\n * @returns {Promise} Resolves with the line item object (See response of cart/add.js https://help.shopify.com/en/themes/development/getting-started/using-ajax-api#add-to-cart)\n */\nexport function getItem(key) {\n  validate.key(key);\n\n  return request.cart().then(function(state) {\n    var lineItem = null;\n\n    state.items.forEach(function(item) {\n      lineItem = item.key === key ? item : lineItem;\n    });\n\n    if (lineItem === null) {\n      return Promise.reject(\n        new Error('Theme Cart: Unable to match line item with provided key')\n      );\n    }\n\n    return lineItem;\n  });\n}\n\n/**\n * Add a new line item to the cart\n * @param {number} id The variant's unique ID\n * @param {object} options Optional values to pass to /cart/add.js\n * @param {number} options.quantity The quantity of items to be added to the cart\n * @param {object} options.properties Line item property key/values (https://help.shopify.com/en/themes/liquid/objects/line_item#line_item-properties)\n * @returns {Promise} Resolves with the line item object (See response of cart/add.js https://help.shopify.com/en/themes/development/getting-started/using-ajax-api#add-to-cart)\n */\nexport function addItem(id, options) {\n  options = options || {};\n\n  validate.id(id);\n\n  return request.cartAdd(id, options.quantity, options.properties);\n}\n\n/**\n * Changes the quantity and/or properties of an existing line item.\n * @param {string} key The unique key of the line item (https://help.shopify.com/en/themes/liquid/objects/line_item#line_item-key)\n * @param {object} options Optional values to pass to /cart/add.js\n * @param {number} options.quantity The quantity of items to be added to the cart\n * @param {object} options.properties Line item property key/values (https://help.shopify.com/en/themes/liquid/objects/line_item#line_item-properties)\n * @returns {Promise} Resolves with the state object of the cart (https://help.shopify.com/en/themes/development/getting-started/using-ajax-api#get-cart)\n */\nexport function updateItem(key, options) {\n  validate.key(key);\n  validate.options(options);\n\n  return getItemIndex(key).then(function(line) {\n    return request.cartChange(line, options);\n  });\n}\n\n/**\n * Removes a line item from the cart\n * @param {string} key The unique key of the line item (https://help.shopify.com/en/themes/liquid/objects/line_item#line_item-key)\n * @returns {Promise} Resolves with the state object of the cart (https://help.shopify.com/en/themes/development/getting-started/using-ajax-api#get-cart)\n */\nexport function removeItem(key) {\n  validate.key(key);\n\n  return getItemIndex(key).then(function(line) {\n    return request.cartChange(line, { quantity: 0 });\n  });\n}\n\n/**\n * Sets all quantities of all line items in the cart to zero. This does not remove cart attributes nor the cart note.\n * @returns {Promise} Resolves with the state object of the cart (https://help.shopify.com/en/themes/development/getting-started/using-ajax-api#get-cart)\n */\nexport function clearItems() {\n  return request.cartClear();\n}\n\n/**\n * Gets all cart attributes\n * @returns {Promise} Resolves with the cart attributes object\n */\nexport function getAttributes() {\n  return request.cart().then(function(state) {\n    return state.attributes;\n  });\n}\n\n/**\n * Sets all cart attributes\n * @returns {Promise} Resolves with the cart state object\n */\nexport function updateAttributes(attributes) {\n  return request.cartUpdate({ attributes: attributes });\n}\n\n/**\n * Clears all cart attributes\n * @returns {Promise} Resolves with the cart state object\n */\nexport function clearAttributes() {\n  return getAttributes().then(function(attributes) {\n    for (var key in attributes) {\n      attributes[key] = '';\n    }\n    return updateAttributes(attributes);\n  });\n}\n\n/**\n * Gets cart note\n * @returns {Promise} Resolves with the cart note string\n */\nexport function getNote() {\n  return request.cart().then(function(state) {\n    return state.note;\n  });\n}\n\n/**\n * Sets cart note\n * @returns {Promise} Resolves with the cart state object\n */\nexport function updateNote(note) {\n  return request.cartUpdate({ note: note });\n}\n\n/**\n * Clears cart note\n * @returns {Promise} Resolves with the cart state object\n */\nexport function clearNote() {\n  return request.cartUpdate({ note: '' });\n}\n\n/**\n * Get estimated shipping rates.\n * @returns {Promise} Resolves with response of /cart/shipping_rates.json (https://help.shopify.com/en/themes/development/getting-started/using-ajax-api#get-shipping-rates)\n */\nexport function getShippingRates() {\n  return request.cartShippingRates();\n}\n","var SECTION_ID_ATTR = 'data-section-id';\n\nexport default function Section(container, properties) {\n  this.container = validateContainerElement(container);\n  this.id = container.getAttribute(SECTION_ID_ATTR);\n  this.extensions = [];\n\n  // eslint-disable-next-line es5/no-es6-static-methods\n  Object.assign(this, validatePropertiesObject(properties));\n\n  this.onLoad();\n}\n\nSection.prototype = {\n  onLoad: Function.prototype,\n  onUnload: Function.prototype,\n  onSelect: Function.prototype,\n  onDeselect: Function.prototype,\n  onBlockSelect: Function.prototype,\n  onBlockDeselect: Function.prototype,\n\n  extend: function extend(extension) {\n    this.extensions.push(extension); // Save original extension\n\n    // eslint-disable-next-line es5/no-es6-static-methods\n    var extensionClone = Object.assign({}, extension);\n    delete extensionClone.init; // Remove init function before assigning extension properties\n\n    // eslint-disable-next-line es5/no-es6-static-methods\n    Object.assign(this, extensionClone);\n\n    if (typeof extension.init === 'function') {\n      extension.init.apply(this);\n    }\n  }\n};\n\nfunction validateContainerElement(container) {\n  if (!(container instanceof Element)) {\n    throw new TypeError(\n      'Theme Sections: Attempted to load section. The section container provided is not a DOM element.'\n    );\n  }\n  if (container.getAttribute(SECTION_ID_ATTR) === null) {\n    throw new Error(\n      'Theme Sections: The section container provided does not have an id assigned to the ' +\n        SECTION_ID_ATTR +\n        ' attribute.'\n    );\n  }\n\n  return container;\n}\n\nfunction validatePropertiesObject(value) {\n  if (\n    (typeof value !== 'undefined' && typeof value !== 'object') ||\n    value === null\n  ) {\n    throw new TypeError(\n      'Theme Sections: The properties object provided is not a valid'\n    );\n  }\n\n  return value;\n}\n\n// Object.assign() polyfill from https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign#Polyfill\nif (typeof Object.assign != 'function') {\n  // Must be writable: true, enumerable: false, configurable: true\n  Object.defineProperty(Object, 'assign', {\n    value: function assign(target) {\n      // .length of function is 2\n      'use strict';\n      if (target == null) {\n        // TypeError if undefined or null\n        throw new TypeError('Cannot convert undefined or null to object');\n      }\n\n      var to = Object(target);\n\n      for (var index = 1; index < arguments.length; index++) {\n        var nextSource = arguments[index];\n\n        if (nextSource != null) {\n          // Skip over if undefined or null\n          for (var nextKey in nextSource) {\n            // Avoid bugs when hasOwnProperty is shadowed\n            if (Object.prototype.hasOwnProperty.call(nextSource, nextKey)) {\n              to[nextKey] = nextSource[nextKey];\n            }\n          }\n        }\n      }\n      return to;\n    },\n    writable: true,\n    configurable: true\n  });\n}\n","/*\n * @shopify/theme-sections\n * -----------------------------------------------------------------------------\n *\n * A framework to provide structure to your Shopify sections and a load and unload\n * lifecycle. The lifecycle is automatically connected to theme editor events so\n * that your sections load and unload as the editor changes the content and\n * settings of your sections.\n */\n\nimport Section from './section';\n\nvar SECTION_TYPE_ATTR = 'data-section-type';\nvar SECTION_ID_ATTR = 'data-section-id';\n\nwindow.Shopify = window.Shopify || {};\nwindow.Shopify.theme = window.Shopify.theme || {};\nwindow.Shopify.theme.sections = window.Shopify.theme.sections || {};\n\nexport var registered = (window.Shopify.theme.sections.registered =\n  window.Shopify.theme.sections.registered || {});\nexport var instances = (window.Shopify.theme.sections.instances =\n  window.Shopify.theme.sections.instances || []);\n\nexport function register(type, properties) {\n  if (typeof type !== 'string') {\n    throw new TypeError(\n      'Theme Sections: The first argument for .register must be a string that specifies the type of the section being registered'\n    );\n  }\n\n  if (typeof registered[type] !== 'undefined') {\n    throw new Error(\n      'Theme Sections: A section of type \"' +\n        type +\n        '\" has already been registered. You cannot register the same section type twice'\n    );\n  }\n\n  function TypedSection(container) {\n    Section.call(this, container, properties);\n  }\n\n  TypedSection.constructor = Section;\n  TypedSection.prototype = Object.create(Section.prototype);\n  TypedSection.prototype.type = type;\n\n  return (registered[type] = TypedSection);\n}\n\nexport function unregister(types) {\n  types = normalizeType(types);\n\n  types.forEach(function(type) {\n    delete registered[type];\n  });\n}\n\nexport function load(types, containers) {\n  types = normalizeType(types);\n\n  if (typeof containers === 'undefined') {\n    containers = document.querySelectorAll('[' + SECTION_TYPE_ATTR + ']');\n  }\n\n  containers = normalizeContainers(containers);\n\n  types.forEach(function(type) {\n    var TypedSection = registered[type];\n\n    if (typeof TypedSection === 'undefined') {\n      return;\n    }\n\n    containers = containers.filter(function(container) {\n      // Filter from list of containers because container already has an instance loaded\n      if (isInstance(container)) {\n        return false;\n      }\n\n      // Filter from list of containers because container doesn't have data-section-type attribute\n      if (container.getAttribute(SECTION_TYPE_ATTR) === null) {\n        return false;\n      }\n\n      // Keep in list of containers because current type doesn't match\n      if (container.getAttribute(SECTION_TYPE_ATTR) !== type) {\n        return true;\n      }\n\n      instances.push(new TypedSection(container));\n\n      // Filter from list of containers because container now has an instance loaded\n      return false;\n    });\n  });\n}\n\nexport function unload(selector) {\n  var instancesToUnload = getInstances(selector);\n\n  instancesToUnload.forEach(function(instance) {\n    var index = instances\n      .map(function(e) {\n        return e.id;\n      })\n      .indexOf(instance.id);\n    instances.splice(index, 1);\n    instance.onUnload();\n  });\n}\n\nexport function extend(selector, extension) {\n  var instancesToExtend = getInstances(selector);\n\n  instancesToExtend.forEach(function(instance) {\n    instance.extend(extension);\n  });\n}\n\nexport function getInstances(selector) {\n  var filteredInstances = [];\n\n  // Fetch first element if its an array\n  if (NodeList.prototype.isPrototypeOf(selector) || Array.isArray(selector)) {\n    var firstElement = selector[0];\n  }\n\n  // If selector element is DOM element\n  if (selector instanceof Element || firstElement instanceof Element) {\n    var containers = normalizeContainers(selector);\n\n    containers.forEach(function(container) {\n      filteredInstances = filteredInstances.concat(\n        instances.filter(function(instance) {\n          return instance.container === container;\n        })\n      );\n    });\n\n    // If select is type string\n  } else if (typeof selector === 'string' || typeof firstElement === 'string') {\n    var types = normalizeType(selector);\n\n    types.forEach(function(type) {\n      filteredInstances = filteredInstances.concat(\n        instances.filter(function(instance) {\n          return instance.type === type;\n        })\n      );\n    });\n  }\n\n  return filteredInstances;\n}\n\nexport function getInstanceById(id) {\n  var instance;\n\n  for (var i = 0; i < instances.length; i++) {\n    if (instances[i].id === id) {\n      instance = instances[i];\n      break;\n    }\n  }\n  return instance;\n}\n\nexport function isInstance(selector) {\n  return getInstances(selector).length > 0;\n}\n\nfunction normalizeType(types) {\n  // If '*' then fetch all registered section types\n  if (types === '*') {\n    types = Object.keys(registered);\n\n    // If a single section type string is passed, put it in an array\n  } else if (typeof types === 'string') {\n    types = [types];\n\n    // If single section constructor is passed, transform to array with section\n    // type string\n  } else if (types.constructor === Section) {\n    types = [types.prototype.type];\n\n    // If array of typed section constructors is passed, transform the array to\n    // type strings\n  } else if (Array.isArray(types) && types[0].constructor === Section) {\n    types = types.map(function(TypedSection) {\n      return TypedSection.prototype.type;\n    });\n  }\n\n  types = types.map(function(type) {\n    return type.toLowerCase();\n  });\n\n  return types;\n}\n\nfunction normalizeContainers(containers) {\n  // Nodelist with entries\n  if (NodeList.prototype.isPrototypeOf(containers) && containers.length > 0) {\n    containers = Array.prototype.slice.call(containers);\n\n    // Empty Nodelist\n  } else if (\n    NodeList.prototype.isPrototypeOf(containers) &&\n    containers.length === 0\n  ) {\n    containers = [];\n\n    // Handle null (document.querySelector() returns null with no match)\n  } else if (containers === null) {\n    containers = [];\n\n    // Single DOM element\n  } else if (!Array.isArray(containers) && containers instanceof Element) {\n    containers = [containers];\n  }\n\n  return containers;\n}\n\nif (window.Shopify.designMode) {\n  document.addEventListener('shopify:section:load', function(event) {\n    var id = event.detail.sectionId;\n    var container = event.target.querySelector(\n      '[' + SECTION_ID_ATTR + '=\"' + id + '\"]'\n    );\n\n    if (container !== null) {\n      load(container.getAttribute(SECTION_TYPE_ATTR), container);\n    }\n  });\n\n  document.addEventListener('shopify:section:unload', function(event) {\n    var id = event.detail.sectionId;\n    var container = event.target.querySelector(\n      '[' + SECTION_ID_ATTR + '=\"' + id + '\"]'\n    );\n    var instance = getInstances(container)[0];\n\n    if (typeof instance === 'object') {\n      unload(container);\n    }\n  });\n\n  document.addEventListener('shopify:section:select', function(event) {\n    var instance = getInstanceById(event.detail.sectionId);\n\n    if (typeof instance === 'object') {\n      instance.onSelect(event);\n    }\n  });\n\n  document.addEventListener('shopify:section:deselect', function(event) {\n    var instance = getInstanceById(event.detail.sectionId);\n\n    if (typeof instance === 'object') {\n      instance.onDeselect(event);\n    }\n  });\n\n  document.addEventListener('shopify:block:select', function(event) {\n    var instance = getInstanceById(event.detail.sectionId);\n\n    if (typeof instance === 'object') {\n      instance.onBlockSelect(event);\n    }\n  });\n\n  document.addEventListener('shopify:block:deselect', function(event) {\n    var instance = getInstanceById(event.detail.sectionId);\n\n    if (typeof instance === 'object') {\n      instance.onBlockDeselect(event);\n    }\n  });\n}\n","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.preload = preload;\nexports.loadImage = loadImage;\nexports.imageSize = imageSize;\nexports.getSizedImageUrl = getSizedImageUrl;\nexports.removeProtocol = removeProtocol;\n/**\n * Image Helper Functions\n * -----------------------------------------------------------------------------\n * https://github.com/Shopify/slate.git.\n *\n */\n\n/**\n * Preloads an image in memory and uses the browsers cache to store it until needed.\n *\n * @param {Array} images - A list of image urls\n * @param {String} size - A shopify image size attribute\n */\n\nfunction preload(images, size) {\n  if (typeof images === 'string') {\n    images = [images];\n  }\n\n  for (var i = 0; i < images.length; i++) {\n    var image = images[i];\n    loadImage(getSizedImageUrl(image, size));\n  }\n}\n\n/**\n * Loads and caches an image in the browsers cache.\n * @param {string} path - An image url\n */\nfunction loadImage(path) {\n  new Image().src = path;\n}\n\n/**\n * Find the Shopify image attribute size\n *\n * @param {string} src\n * @returns {null}\n */\nfunction imageSize(src) {\n  var match = src.match(/.+_((?:pico|icon|thumb|small|compact|medium|large|grande)|\\d{1,4}x\\d{0,4}|x\\d{1,4})[_\\.@]/);\n\n  if (match) {\n    return match[1];\n  } else {\n    return null;\n  }\n}\n\n/**\n * Adds a Shopify size attribute to a URL\n *\n * @param src\n * @param size\n * @returns {*}\n */\nfunction getSizedImageUrl(src, size) {\n  if (size === null) {\n    return src;\n  }\n\n  if (size === 'master') {\n    return removeProtocol(src);\n  }\n\n  var match = src.match(/\\.(jpg|jpeg|gif|png|bmp|bitmap|tiff|tif)(\\?v=\\d+)?$/i);\n\n  if (match) {\n    var prefix = src.split(match[0]);\n    var suffix = match[0];\n\n    return removeProtocol(prefix[0] + '_' + size + suffix);\n  } else {\n    return null;\n  }\n}\n\nfunction removeProtocol(path) {\n  return path.replace(/http(s)?:/, '');\n}\n"],"sourceRoot":""}