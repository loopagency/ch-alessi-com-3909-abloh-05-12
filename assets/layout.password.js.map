{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./scripts/helpers/utils.js","webpack:///./scripts/helpers/cssClasses.js","webpack:///./scripts/helpers/a11y.js","webpack:///./scripts/mixins/bind.js","webpack:///./scripts/layout/password.js","webpack:///../node_modules/webpack/buildin/global.js","webpack:///./scripts/mixins/overlay.js","webpack:///./scripts/components/toggle.js","webpack:///./scripts/helpers/event-bus.js"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","4","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","unique","filter","index","self","indexOf","difference","array1","array2","concat","lastIndexOf","extendDefaults","defaults","properties","formToJSON","elements","reduce","element","serialize","form","serialized","field","disabled","type","counter","options","selected","encodeURIComponent","checked","join","on","event","arguments","callback","capture","elem","addEventListener","document","querySelector","getSiblings","Array","parentNode","children","sibling","getBrowser","userAgent","navigator","getOuterHTML","outerHTML","container","createElement","appendChild","cloneNode","innerHTML","isElement","Element","HTMLDocument","getQueryParamsObject","parser","href","location","vars","search","substring","split","pair","decodeURIComponent","isElementInViewport","viewport","viewPortBounding","getBoundingClientRect","elementBounding","viewPortPosition","left","width","elementPortPosition","Math","ceil","throttle","wait","immediate","timeout","initialCall","_len","args","_key","next","this","setTimeout","debounce","_len2","_key2","callNow","clearTimeout","decodeHTMLEntities","text","textArea","scrollStop","isScrolling","capitalize","charAt","toUpperCase","tagByName","tagname","tags","find","item","includes","replace","handleize","toLowerCase","__webpack_exports__","active","added","collapsed","hidden","lazyload","lazyloaded","loading","removing","sticky","tabbable","haserror","focusable","updateTabindexOnElement","keyboardTabbable","_helpers_cssClasses__WEBPACK_IMPORTED_MODULE_2__","config","include","forEach","selector","focusableElements","querySelectorAll","Boolean","offsetWidth","offsetHeight","getClientRects","exclude","exclusionList","tabindex","Error","setAttribute","handleKeyboardEvent","keyCode","body","classList","add","removeEventListener","freeze","init","_helpers_utils__WEBPACK_IMPORTED_MODULE_1__","settings","e","className","isSet","every","contains","remove","set","_helpers_event_bus__WEBPACK_IMPORTED_MODULE_1__","_components_toggle__WEBPACK_IMPORTED_MODULE_2__","Frame","EventBus","toggleSelector","overlay","g","Function","utils","namespace","getOverlay","close","removeChild","cssClasses","setCloseEvents","emit","target","getElementById","open","currentOverlay","getAttribute","windowOverlay","binder","documentElement","previouslySelectedElement","focusInput","scrollLock","toggleTabIndex","nodeSelectors","getTargetOfToggle","toggleElement","dataset","openToggleTarget","bodyScrollLock_min","disableBodyScroll","activeElement","a11y","theme_a11y","elementToFocus","closeToggleTarget","isTargetActive","enableBodyScroll","focus","unsetTabIndexOnTarget","preventDefault","listen","response","eventBus","events","handler","all"],"mappings":"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","file":"layout.password.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t4: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"shopifySlateJsonp\"] = window[\"shopifySlateJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([299,0,1]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","import \"core-js/modules/es.string.includes\";\nimport \"core-js/modules/es.string.replace\";\nimport \"core-js/modules/es.string.search\";\nimport \"core-js/modules/es.string.split\";\nimport \"core-js/modules/es.string.includes\";\nimport \"core-js/modules/es.string.replace\";\nimport \"core-js/modules/es.string.search\";\nimport \"core-js/modules/es.string.split\";\n/**\n * Helper: Utils\n * ------------------------------------------------------------------------------\n * Frame utility functions.\n *\n * @namespace utils\n */\n\n/**\n * Get unique objects from object literal.\n * @param {Object} object - Array/Object to remove duplicates from.\n * @returns {Object}\n */\nexport function unique(object) {\n  return object.filter((value, index, self) => self.indexOf(value) === index);\n}\n\n/**\n * Get the difference of two arrays.\n * @param {Array} array - An array containing two arrays to diff.\n * @returns {Array}\n */\nexport function difference(array1, array2) {\n  return array1.concat(array2).filter((value, index, self) => {\n    return self.indexOf(value) === self.lastIndexOf(value);\n  });\n}\n\n/**\n * Combine two objects using properties as the override.\n * @param {Object} defaults - Defaults options defined in script.\n * @param {Object} properties - Options defined by user.\n * @returns {Object} - Defaults modified options.\n */\nexport function extendDefaults(defaults, properties) {\n  for (const property in properties) {\n    if (properties != null && typeof properties !== 'undefined') {\n      defaults[property] = properties[property];\n    }\n  }\n  return defaults;\n}\n\n/**\n * Retrieves input data from a form.\n * @param {HTMLForm} form - HTML form elements.\n * @returns {Object} - Form data as an object literal.\n */\nexport function formToJSON(elements) {\n  return [].reduce.call(elements, (data, element) => {\n    if (element.name && element.value) {\n      data[element.name] = element.value;\n    }\n    return data;\n  }, {});\n}\n\n/**\n * Serialize all form data into a query string.\n * @param {Node} form - The form to serialize.\n * @returns {String}\n */\nexport function serialize(form) {\n  const serialized = [];\n\n  /**\n   * Loop through each field in the form.\n   */\n  for (let i = 0; i < form.elements.length; i++) {\n    const field = form.elements[i];\n\n    // Don't serialize fields without a name, submits, buttons, file and reset inputs, and disabled fields\n    if (!field.name || field.disabled || field.type === 'file' || field.type === 'reset' || field.type === 'submit' || field.type === 'button') {\n      continue;\n    }\n\n    /**\n     * If a multi-select, get all selections.\n     */\n    if (field.type === 'select-multiple') {\n      for (let counter = 0; counter < field.options.length; counter++) {\n        if (!field.options[counter].selected) {\n          continue;\n        }\n        serialized.push(\"\".concat(encodeURIComponent(field.name), \"=\").concat(encodeURIComponent(field.options[counter].value)));\n      }\n    } else if (field.type !== 'checkbox' && field.type !== 'radio' || field.checked) {\n      serialized.push(\"\".concat(encodeURIComponent(field.name), \"=\").concat(encodeURIComponent(field.value)));\n    }\n  }\n  return serialized.join('&');\n}\n\n/**\n * Shortcut function to add an event listener.\n * (c) 2017 Chris Ferdinandi, MIT License, https://gomakethings.com.\n * @param {String} event -The event type.\n * @param {Node} element - The element to attach the event to (optional, defaults to window).\n * @param {Function} callback - The callback to run on the event.\n * @param {Boolean} capture - If true, forces bubbling on non-bubbling events.\n */\nexport function on(event) {\n  let element = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : window;\n  let callback = arguments.length > 2 ? arguments[2] : undefined;\n  let capture = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n  /**\n   * If only a string is passed into the element parameter.\n   */\n  if (typeof elem === 'string') {\n    document.querySelector(element).addEventListener(event, callback, capture);\n    return;\n  }\n\n  /**\n   * If an element is not defined in parameters, then shift callback across.\n   */\n  if (typeof element === 'function') {\n    window.addEventListener(event, element);\n    return;\n  }\n\n  /**\n   * Default listener.\n   */\n  if (element) {\n    element.addEventListener(event, callback, capture);\n  }\n}\n\n/**\n * Remove an event listener.\n * (c) 2017 Chris Ferdinandi, MIT License, https://gomakethings.com.\n * @param {String} event - The event type.\n * @param {Node} element - The element to remove the event to (optional, defaults to window).\n * @param {Function} callback - The callback that ran on the event.\n * @param {Boolean} capture - If true, forces bubbling on non-bubbling events.\n */\nexport function off(event, element, callback) {\n  let capture = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n  /**\n   * If only a string is passed into the element parameter.\n   */\n  if (typeof element === 'string') {\n    document.querySelector(element).removeEventListener(event, callback, capture);\n    return;\n  }\n\n  /**\n   * If an element is not defined in parameters, then shift callback across.\n   */\n  if (typeof element === 'function') {\n    window.removeEventListener(event, element);\n    return;\n  }\n\n  /**\n   * Default listener.\n   */\n  element.removeEventListener(event, callback, capture);\n}\n\n/**\n * Get all siblings of an element.\n * (c) 2018 Chris Ferdinandi, MIT License, https://gomakethings.com.\n * @param {Node} element - The element you want get the siblings of.\n * @returns {Array}\n */\nexport function getSiblings(element) {\n  return Array.prototype.filter.call(element.parentNode.children, sibling => {\n    return sibling !== element;\n  });\n}\n\n/**\n * Render function.\n * @param {String} template - The template string to render.\n * @param {Node} node - The node to render into.\n */\nexport function render(template, node) {\n  if (!node) {\n    return;\n  }\n  node.innerHTML = template;\n}\n\n/**\n * Browser detect and return a string.\n * - https://developer.mozilla.org/en-US/docs/Web/API/Window/navigator.\n * @returns {String}\n */\nexport function getBrowser() {\n  const userAgent = window.navigator.userAgent;\n\n  // The order matters here, and this may report false positives for unlisted browsers.\n  if (userAgent.indexOf('Firefox') > -1) {\n    // 'Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:61.0) Gecko/20100101 Firefox/61.0'\n    return 'Firefox';\n  } else if (userAgent.indexOf('Opera') > -1) {\n    return 'Opera';\n  } else if (userAgent.indexOf('Trident') > -1) {\n    // 'Mozilla/5.0 (Windows NT 10.0; WOW64; Trident/7.0; .NET4.0C; .NET4.0E; Zoom 3.6.0; wbx 1.0.0; rv:11.0) like Gecko'\n    return 'Internet Explorer';\n  } else if (userAgent.indexOf('Edge') > -1) {\n    // 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.36 Edge/16.16299'\n    return 'Edge';\n  } else if (userAgent.indexOf('Chrome') > -1) {\n    // 'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Ubuntu Chromium/66.0.3359.181 Chrome/66.0.3359.181 Safari/537.36'\n    return 'Chrome';\n  } else if (userAgent.indexOf('Safari') > -1) {\n    // 'Mozilla/5.0 (iPhone; CPU iPhone OS 11_4 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/11.0 Mobile/15E148 Safari/604.1 980x1306'\n    return 'Safari';\n  }\n  return 'unknown';\n}\n\n/**\n * Get outerHTML of elements, taking care of SVG elements in IE as well.\n * @param {Element} element - Element to get outerHTML of.\n * @returns {String}\n */\nexport function getOuterHTML(element) {\n  if (element.outerHTML) {\n    return element.outerHTML;\n  } else {\n    const container = document.createElement('div');\n    container.appendChild(element.cloneNode(true));\n    return container.innerHTML;\n  }\n}\n\n/**\n * Check if object is a HTMLElement.\n * @param {Object} element - HTML element to check.\n * @returns {HTMLElement}\n */\nexport function isElement(element) {\n  return element instanceof window.Element || element instanceof window.HTMLDocument;\n}\n\n/**\n * Get URL query parameters as an object.\n * @returns {Object}\n */\nexport function getQueryParamsObject() {\n  const result = {};\n  const parser = document.createElement('a');\n  parser.href = window.location.href;\n  const query = parser.search.substring(1);\n  const vars = query.split('&');\n  for (let i = 0; i < vars.length; i++) {\n    const pair = vars[i].split('=');\n    result[pair[0]] = decodeURIComponent(pair[1]);\n  }\n  return result;\n}\n\n/**\n * Checks if an element is within viewport and visible boundary.\n * @param {HTMLElement} viewport - Viewport container.\n * @param {HTMLElement} element - Element to check.\n * @returns {Boolean}\n */\nexport function isElementInViewport(viewport, element) {\n  const viewPortBounding = viewport.getBoundingClientRect();\n  const elementBounding = element.getBoundingClientRect();\n  const viewPortPosition = viewPortBounding.left + viewPortBounding.width;\n  const elementPortPosition = elementBounding.left + elementBounding.width;\n  const isElementBoundLeft = () => Math.ceil(elementBounding.left) >= viewPortBounding.left;\n  const isElementBoundRight = () => viewPortPosition >= elementPortPosition;\n  return isElementBoundLeft() && isElementBoundRight();\n}\n\n/**\n * Returns a function, that, as long as it continues to be invoked,\n * will not be triggered. The function will be called after it stops\n * being called for N milliseconds. If `immediate` is passed, trigger\n * the function on the leading edge, instead of the trailing.\n *\n * @param {Function} callback - The function to execute when timer is passed.\n * @param {Number} wait - The amount of time before debounce call is triggered.\n * @param {Boolean} immediate - Trigger the immediately.\n */\nexport function throttle(callback, wait) {\n  let immediate = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  let timeout = null;\n  let initialCall = true;\n  return function () {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    const callNow = immediate && initialCall;\n    function next() {\n      callback.apply(this, args);\n      timeout = null;\n    }\n    if (callNow) {\n      initialCall = false;\n      next();\n    }\n    if (!timeout) {\n      timeout = window.setTimeout(next, wait);\n    }\n  };\n}\n\n/**\n * Debounce functions for better performance\n * (c) 2018 Chris Ferdinandi, MIT License, https://gomakethings.com\n * @param {Function} callback The function to debounce.\n * @param {Number} wait - The amount of time before debounce call is triggered.\n * @param {Boolean} immediate - Trigger the immediately.\n */\nexport function debounce(callback, wait, immediate) {\n  let timeout = null;\n  return function () {\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n    const later = function later() {\n      timeout = null;\n      if (!immediate) {\n        callback.apply(this, args);\n      }\n    };\n    const callNow = immediate && !timeout;\n    window.clearTimeout(timeout);\n    timeout = window.setTimeout(later, wait);\n    if (callNow) {\n      callback.apply(this, args);\n    }\n  };\n}\n\n/**\n * Decode strings from HTML symbols generated by Liquid json filter\n * @param {String} text - String to decode\n */\nexport function decodeHTMLEntities(text) {\n  const textArea = document.createElement('textarea');\n  textArea.innerHTML = text;\n  return textArea.value;\n}\n\n/**\n * Run a callback function after scrolling has stopped\n * (c) 2017 Chris Ferdinandi, MIT License, https://gomakethings.com\n * @param  {Function} callback - The function to run after scrolling\n */\nexport function scrollStop(callback) {\n  if (!callback || typeof callback !== 'function') {\n    return;\n  }\n  let isScrolling;\n  window.addEventListener('scroll', () => {\n    window.clearTimeout(isScrolling);\n    isScrolling = setTimeout(() => {\n      callback();\n    }, 66);\n  }, false);\n}\n\n/**\n * Capitalize given string.\n * @param {String} value - String to use.\n */\nexport function capitalize(value) {\n  return value.charAt(0).toUpperCase() + value.slice(1);\n}\n\n/**\n * Returns value of tag in format 'tagname: tagvalue'.\n * @param {String} tagname - Tags to search\n * @param {Array} tags - Array of tags\n */\nexport function tagByName(tagname, tags) {\n  const tag = tags.find(item => item.includes(\"\".concat(tagname, \": \")));\n  return tag.replace(\"\".concat(tagname, \": \"), '');\n}\nexport function handleize(value) {\n  return value.toLowerCase().replace(/\\s+/g, '-');\n}","/**\n * Helper: CSS classes\n * -----------------------------------------------------------------------------\n * Global configuration for css classes.\n * - Used to provide consistency and keep DRY for our toggle classes.\n */\nexport default {\n  active: 'is-active',\n  added: 'is-added',\n  collapsed: 'is-collapsed',\n  disabled: 'is-disabled',\n  hidden: 'is-hidden',\n  lazyload: 'lazyload',\n  lazyloaded: 'lazyloaded',\n  loading: 'is-loading',\n  removing: 'is-removing',\n  sticky: 'is-sticky',\n  tabbable: 'is-tabbable',\n  haserror: 'has-error'\n};","import \"core-js/modules/es.string.includes\";\nimport \"core-js/modules/web.dom-collections.iterator\";\nimport \"core-js/modules/es.string.includes\";\nimport \"core-js/modules/web.dom-collections.iterator\";\n/**\n * Helpers: a11y\n * ------------------------------------------------------------------------------\n * Entry file for accessibility utility functions.\n * - Focusables\n * - Keyboard tabbable.\n *\n * @namespace frameA11y\n */\nimport cssClasses from '~/helpers/cssClasses';\n\n/**\n * Get all focusable elements within targeted container.\n * - Force included parameters defined in config.\n * - Remove excluded elements defined in config.\n * @param {Element} container - Target container to get focusable elements from.\n * @returns {Object}\n */\nexport function focusable(container) {\n  let config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  const defaults = ['[tabindex]', '[draggable]', 'a[href]', 'area', 'button:enabled', 'input:not([type=hidden]):enabled', 'object', 'select:enabled', 'textarea:enabled'];\n\n  /**\n   * Override default settings with component configuration.\n   */\n  if (config && config.include && config.include.length) {\n    config.include.forEach(selector => defaults.push(selector));\n  }\n  const elements = [...container.querySelectorAll(defaults.join())];\n\n  /**\n   * Return visible elements from the focusable items.\n   */\n  const focusableElements = elements.filter(element => {\n    return Boolean(element.offsetWidth || element.offsetHeight || element.getClientRects().length);\n  });\n\n  /**\n   * Return un-excluded focusable elements.\n   */\n  if (config && config.exclude && config.exclude.length) {\n    const exclusionList = [...container.querySelectorAll(config.exclude.join())];\n    return focusableElements.filter(element => {\n      return !exclusionList.includes(element);\n    });\n  }\n  return focusableElements;\n}\n\n/**\n * Set tabindex on focusable elements within target container.\n * @param {Element} container - Target container to get focusable elements from.\n * @param {Integer} tabindex - Tabindex value (Default: 0).\n */\nexport function updateTabindexOnElement(container) {\n  let tabindex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  const focusableElements = focusable(container);\n  if (!focusableElements) {\n    throw new Error('Could not find any focusable elements in container');\n  }\n  focusableElements.forEach(element => {\n    element.setAttribute('tabindex', tabindex);\n  });\n}\n\n/**\n * Enables focus.tabbable class to body\n * - Used to control styling of accessibility focus states.\n */\nexport function keyboardTabbable() {\n  /**\n   * Instantiate state and events.\n   */\n  function init() {\n    setEventListeners();\n  }\n\n  /**\n   * Set keyboard listeners.\n   */\n  function setEventListeners() {\n    document.addEventListener('keydown', handleKeyboardEvent);\n  }\n\n  /**\n   * Handle keyboard events after validating Tab.\n   * @param {Event} event - Keyboard keydown event.\n   */\n  function handleKeyboardEvent(event) {\n    if (isKeyPressIsTab(event)) {\n      handleTabEvent();\n    }\n  }\n\n  /**\n   * Check if Tab key has been pressed.\n   * @param {Event} event - Keyboard event passed from user input on document.\n   */\n  function isKeyPressIsTab(event) {\n    return event.keyCode === 9;\n  }\n\n  /**\n   * Handle Tab keyboard event.\n   * @param {Event} event - Key code event set on document.\n   */\n  function handleTabEvent() {\n    document.body.classList.add(cssClasses.tabbable);\n    document.removeEventListener('keydown', handleKeyboardEvent);\n  }\n\n  /**\n   * Expose public interface.\n   */\n  return Object.freeze({\n    init\n  });\n}","import \"core-js/modules/web.dom-collections.iterator\";\nimport \"core-js/modules/web.dom-collections.iterator\";\n/**\n * Mixin: Bind\n * -----------------------------------------------------------------------------\n * Mixin to set, remove and detect a class from a defined target.\n * - Useful to avoid multiple event binds when initialising components.\n *\n */\nimport { extendDefaults } from '~/helpers/utils';\n\n/**\n * Create a new bind object.\n * @param {HTMLElement} element - HTML element to bind with a class.\n * @param {Object} config - Configuration.\n */\nexport default ((element, config) => {\n  /**\n   * Instance defaults settings.\n   */\n  const defaults = {\n    className: 'post-init'\n  };\n\n  /**\n   * Instance settings.\n   */\n  const settings = extendDefaults(defaults, config);\n\n  /**\n   * Set bind class on target.\n   */\n  function set() {\n    if (!element.length) {\n      element.classList.add(settings.className);\n      return;\n    }\n    [...element].forEach(item => {\n      item.classList.add(settings.className);\n    });\n  }\n\n  /**\n   * Remove bind class on target.\n   */\n  function remove() {\n    if (!element.length) {\n      element.classList.remove(settings.className);\n      return;\n    }\n    [...element].forEach(item => {\n      item.classList.remove(settings.className);\n    });\n  }\n\n  /**\n   * Check if element has already been initialised.\n   */\n  function isSet() {\n    if (!element.length) {\n      return element.classList.contains(settings.className);\n    }\n    return [...element].every(item => {\n      return item.classList.contains(settings.className);\n    });\n  }\n\n  /**\n   * Expose public interface.\n   */\n  return Object.freeze({\n    isSet,\n    remove,\n    set\n  });\n});","/**\n * Layout: Password\n * ------------------------------------------------------------------------------\n * A file that contains scripts highly couple code to the product template.\n *\n */\nimport '@/styles/theme.scss';\n\n/**\n * Password helpers.\n */\nimport EventBus from '~/helpers/event-bus';\n\n/**\n * Password component imports.\n */\nimport Toggle from '~/components/toggle';\n\n/**\n * Frame utils.\n */\nwindow.Frame = window.Frame || {};\nwindow.Frame.EventBus = EventBus();\ndocument.addEventListener('DOMContentLoaded', () => {\n  /**\n   * Instantiate password form toggle.\n   */\n  const FormToggle = Toggle({\n    toggleSelector: 'loginFormToggle',\n    overlay: false\n  });\n  FormToggle.init();\n});","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","/**\n * Mixin: Overlay\n * -----------------------------------------------------------------------------\n * A simple mixin to toggle window overlay with escape events.\n *\n * @namespace Overlay\n */\nimport cssClasses from '~/helpers/cssClasses';\nimport { extendDefaults, on } from '~/helpers/utils';\n\n/**\n * Export overlay module as default.\n * @param {Object} config - Configuration.\n */\nexport default (config => {\n  /**\n   * Instance default settings.\n   */\n  const defaults = {\n    namespace: 'overlay',\n    container: 'window-overlay'\n  };\n\n  /**\n   * Instance settings.\n   */\n  const settings = extendDefaults(defaults, config);\n\n  /**\n   * Construct window overlay element on DOM.\n   */\n  function constructOverlay() {\n    const element = document.createElement('div');\n    element.classList.add(settings.container);\n    element.setAttribute('js-overlay', settings.namespace);\n    element.setAttribute('js-window', 'overlay');\n    return element;\n  }\n\n  /**\n   * Get window overlay element.\n   * @param {String} namespace - The overlay namespace to find.\n   */\n  function getOverlay(namespace) {\n    if (namespace) {\n      return document.querySelector(\"[js-overlay=\\\"\".concat(namespace, \"\\\"]\"));\n    }\n    return document.querySelector(\"[js-window=\\\"overlay\\\"]\");\n  }\n\n  /**\n   * Update window overlay element if it already exists.\n   */\n  function updateOverlay() {\n    const overlay = document.querySelector(\"[js-window=\\\"overlay\\\"]\");\n    const currentOverlay = overlay.getAttribute('js-overlay');\n    if (currentOverlay !== settings.namespace) {\n      overlay.setAttribute('js-overlay', settings.namespace);\n      Frame.EventBus.emit(\"Toggle:\".concat(currentOverlay, \":close\"));\n      setCloseEvents();\n      return true;\n    }\n    return true;\n  }\n\n  /**\n   * Open overlay and set esc events.\n   */\n  function open() {\n    if (getOverlay()) {\n      updateOverlay();\n      return;\n    }\n    render();\n    setCloseEvents();\n  }\n\n  /**\n   * Hide overlay and remove esc event.\n   */\n  function close() {\n    if (!getOverlay()) {\n      return;\n    }\n    remove();\n  }\n\n  /**\n   * Render overlay after constructing DOM element.\n   */\n  function render() {\n    const windowOverlay = constructOverlay();\n    document.body.appendChild(windowOverlay);\n\n    /**\n     * Dirty way to avoid MutationObserver by using an instant timeout.\n     */\n    window.setTimeout(() => windowOverlay.classList.add(cssClasses.active), 1);\n    Frame.EventBus.emit(\"Overlay:\".concat(settings.namespace, \":open\"));\n  }\n\n  /**\n   * Remove overlay from DOM after transitioning out.\n   */\n  function remove() {\n    on('transitionend', getOverlay(), () => {\n      if (getOverlay()) {\n        document.body.removeChild(getOverlay());\n      }\n    });\n\n    /**\n     * Only close overlay if toggle namespace overlay exists.\n     */\n    if (getOverlay(settings.namespace)) {\n      getOverlay(settings.namespace).classList.remove(cssClasses.active);\n    }\n  }\n\n  /**\n   * Set close events.\n   */\n  function setCloseEvents() {\n    on('click', getOverlay(settings.namespace), () => handleClickEvent());\n  }\n\n  /**\n   * Handle click event on overlay.\n   */\n  function handleClickEvent() {\n    Frame.EventBus.emit(\"Overlay:\".concat(settings.namespace, \":close\"), {\n      selector: settings.namespace,\n      target: document.getElementById(settings.namespace)\n    });\n    close();\n  }\n\n  /**\n   * Expose public interface.\n   */\n  return Object.freeze({\n    open,\n    close\n  });\n});","import \"core-js/modules/web.dom-collections.iterator\";\nimport \"core-js/modules/web.dom-collections.iterator\";\n/**\n * Component: Toggle\n * ------------------------------------------------------------------------------\n * A accessible function to trigger a toggle-able component with a window overlay.\n *\n * @namespace Toggle\n */\nimport { trapFocus, removeTrapFocus } from '@shopify/theme-a11y';\nimport { disableBodyScroll, enableBodyScroll } from 'body-scroll-lock';\nimport cssClasses from '~/helpers/cssClasses';\nimport { focusable } from '~/helpers/a11y';\nimport { extendDefaults, isElement, on } from '~/helpers/utils';\nimport bind from '~/mixins/bind';\nimport overlay from '~/mixins/overlay';\n\n/**\n * Export default toggle module.\n * @param {Object} config - Configuration.\n */\nexport default (config => {\n  /**\n   * Initialise component bind to prevent double binds.\n   */\n  const binder = bind(document.documentElement, {\n    className: 'esc-bind'\n  });\n\n  /**\n   * Instance globals.\n   */\n  let previouslySelectedElement = {};\n\n  /**\n   * Instance default settings.\n   */\n  const defaults = {\n    exclude: config.exclude || [],\n    focusInput: true,\n    include: config.include || [],\n    namespace: config.toggleSelector,\n    overlay: true,\n    scrollLock: false,\n    toggleTabIndex: true\n  };\n\n  /**\n   * Instance settings.\n   */\n  const settings = extendDefaults(defaults, config);\n  const namespace = settings.namespace;\n\n  /**\n   * Node selectors.\n   */\n  const nodeSelectors = {\n    toggleSelector: [...document.querySelectorAll(\"[js-toggle=\\\"\".concat(config.toggleSelector, \"\\\"]\"))]\n  };\n\n  /**\n   * Initiate component.\n   */\n  function init() {\n    setEventListeners();\n    setEventBusListeners();\n  }\n\n  /**\n   * Set click events on toggle selectors.\n   */\n  function setEventListeners() {\n    nodeSelectors.toggleSelector.forEach(element => {\n      const target = document.getElementById(element.dataset.target);\n      on('click', element, event => handleToggleEvent(event, target));\n      if (settings.toggleTabIndex) {\n        unsetTabIndexOnTarget(target);\n      }\n    });\n    if (binder.isSet()) {\n      return;\n    }\n    on('keydown', event => onEscEvent(event));\n    binder.set();\n  }\n\n  /**\n   * Set component listeners.\n   */\n  function setEventBusListeners() {\n    Frame.EventBus.listen(['EscEvent:on', \"Overlay:\".concat(namespace, \":close\"), \"Toggle:\".concat(namespace, \":close\")], response => {\n      if (typeof response !== 'undefined' && response.selector) {\n        closeToggleTarget(getTargetOfToggle(response.selector));\n        return;\n      }\n      closeToggleTarget(getTargetOfToggle(namespace));\n    });\n  }\n\n  /**\n   * Get toggle target from selector.\n   * @param {String} selector - The id of the toggle element.\n   * @returns {HTMLElement}\n   */\n  function getTargetOfToggle(selector) {\n    const toggleElement = document.querySelector(\"[js-toggle=\\\"\".concat(selector, \"\\\"]\"));\n    return document.getElementById(toggleElement.dataset.target);\n  }\n\n  /**\n   * Handle toggle events.\n   * @param {Event} event Click event.\n   */\n  function handleToggleEvent(event, target) {\n    event.preventDefault();\n    toggle(target);\n  }\n\n  /**\n   * Toggle target component.\n   * @param {Object} target - The clicked toggle element.\n   * @returns {Function}\n   */\n  function toggle(target) {\n    return isTargetActive(target) ? closeToggleTarget(target) : openToggleTarget(target);\n  }\n\n  /**\n   * Open target component and fire global open event.\n   * @param {Object} target - The clicked toggle element.\n   */\n  function openToggleTarget(target) {\n    target.classList.add(cssClasses.active);\n    if (settings.overlay) {\n      overlay({\n        namespace\n      }).open();\n    }\n    if (settings.scrollLock) {\n      disableBodyScroll(target);\n    }\n    Frame.EventBus.emit(\"Toggle:\".concat(namespace, \":open\"), target);\n    focusTarget(target);\n    if (settings.toggleTabIndex) {\n      setTabIndexOnTarget(target);\n    }\n    binder.set();\n  }\n\n  /**\n   * Close target component and fire global close event.\n   * @param {Object} target - The clicked toggle element.\n   */\n  function closeToggleTarget(target) {\n    if (!target || !isTargetActive(target)) {\n      return;\n    }\n    target.classList.remove(cssClasses.active);\n    if (settings.overlay) {\n      overlay({\n        namespace\n      }).close();\n    }\n    if (settings.scrollLock) {\n      enableBodyScroll(target);\n    }\n    Frame.EventBus.emit(\"Toggle:\".concat(namespace, \":close\"), target);\n    removeFocusTarget();\n    if (settings.toggleTabIndex) {\n      unsetTabIndexOnTarget(target);\n    }\n    binder.remove();\n  }\n\n  /**\n   * Check if target is active.\n   * @param {Object} target - The clicked toggle element.\n   * @returns {Boolean}\n   */\n  function isTargetActive(target) {\n    return target.classList.contains(cssClasses.active);\n  }\n\n  /**\n   * Set a11y focus on first target.\n   * @param {Object} target - The clicked toggle element.\n   */\n  function focusTarget(target) {\n    if (!target) {\n      return;\n    }\n\n    /**\n     * Accessibility helpers to keep track of focused and focusable elements.\n     */\n    previouslySelectedElement = document.activeElement;\n    const focusableElements = focusable(target, settings);\n    if (focusableElements.length) {\n      trapFocus(target, {\n        elementToFocus: focusableElements[0]\n      });\n      return;\n    }\n    trapFocus(target);\n  }\n\n  /**\n   * Remove a11y focus on target.\n   */\n  function removeFocusTarget() {\n    if (isElement(previouslySelectedElement)) {\n      window.setTimeout(() => previouslySelectedElement.focus(), 0);\n    }\n    removeTrapFocus();\n  }\n\n  /**\n   * Set tabindex to 0 on target focusables to make them un-tabbable.\n   * @param {String} target - Target element.\n   */\n  function unsetTabIndexOnTarget(target) {\n    focusable(target, settings).forEach(element => element.setAttribute('tabindex', -1));\n  }\n\n  /**\n   * Unset tabindex on target focusables to 1 to make them tabbable.\n   * @param {String} target - Target element.\n   */\n  function setTabIndexOnTarget(target) {\n    focusable(target, settings).forEach(element => element.setAttribute('tabindex', 0));\n  }\n\n  /**\n   * Set Esc keyboard event.\n   * @param {Event} event - Key code event set on document.\n   */\n  function onEscEvent(event) {\n    if (!isKeyPressIsEsc(event) || !binder.isSet()) {\n      return;\n    }\n    Frame.EventBus.emit('EscEvent:on');\n    binder.remove();\n  }\n\n  /**\n   * Check if Esc key has been pressed.\n   * @param {Event} event - Keyboard event passed from user input on document.\n   * @returns {Boolean}\n   */\n  function isKeyPressIsEsc(event) {\n    return event.keyCode === 27;\n  }\n\n  /**\n   * Expose public interface.\n   */\n  return Object.freeze({\n    init,\n    open: openToggleTarget,\n    close: closeToggleTarget\n  });\n});","import \"core-js/modules/web.dom-collections.iterator\";\nimport \"core-js/modules/web.dom-collections.iterator\";\n/**\n * Helper: Event bus\n * -----------------------------------------------------------------------------\n * A global event dispatcher used to communicate between components.\n *\n * @namespace eventBus\n */\nexport default (() => {\n  /**\n   * Create a new EventBus instance.\n   */\n  const eventBus = {};\n\n  /**\n   * Listen for the given event.\n   * @param {String|Array} events - Event string. eg: Namespace:state.\n   * @param {Function} handler - Callback function to execute when event is fired.\n   */\n  function listen(events, handler) {\n    [...[].concat(events)].forEach(event => {\n      eventBus[event] = (eventBus[event] || []).concat(handler);\n    });\n    return this;\n  }\n\n  /**\n   * Trigger all handlers for the given event.\n   * @param {String} event - Event string. eg: `Namespace:state`.\n   * @param {*} data - Payload to send to listeners.\n   */\n  function emit(event, data) {\n    if (!eventBus[event]) {\n      return false;\n    }\n    return [...eventBus[event]].forEach(handler => handler(data));\n  }\n\n  /**\n   * Fetch all registered event listeners.\n   */\n  function all() {\n    return eventBus;\n  }\n\n  /**\n   * Expose public interface.\n   */\n  return Object.freeze({\n    listen,\n    emit,\n    all\n  });\n});"],"sourceRoot":""}